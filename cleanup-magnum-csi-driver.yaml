apiVersion: v1
kind: Service
metadata:
  labels:
    app: csi-cinder-controllerplugin
  name: csi-cinder-controller-service
  namespace: kube-system
spec:
  ports:
  - name: dummy
    port: 12345
  selector:
    app: csi-cinder-controllerplugin
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-cinder-controllerplugin
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-cinder-controllerplugin
  serviceName: csi-cinder-controller-service
  template:
    metadata:
      labels:
        app: csi-cinder-controllerplugin
    spec:
      containers:
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --timeout=3m
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: ${CONTAINER_INFRA_PREFIX:-quay.io/k8scsi/}csi-attacher:${CSI_ATTACHER_TAG}
        imagePullPolicy: IfNotPresent
        name: csi-attacher
        resources:
          requests:
            cpu: 20m
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=3m
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: ${CONTAINER_INFRA_PREFIX:-quay.io/k8scsi/}csi-provisioner:${CSI_PROVISIONER_TAG}
        imagePullPolicy: IfNotPresent
        name: csi-provisioner
        resources:
          requests:
            cpu: 20m
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: ${CONTAINER_INFRA_PREFIX:-quay.io/k8scsi/}csi-snapshotter:${CSI_SNAPSHOTTER_TAG}
        imagePullPolicy: Always
        name: csi-snapshotter
        resources:
          requests:
            cpu: 20m
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: ${CONTAINER_INFRA_PREFIX:-quay.io/k8scsi/}csi-resizer:${CSI_RESIZER_TAG}
        imagePullPolicy: IfNotPresent
        name: csi-resizer
        resources:
          requests:
            cpu: 20m
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - /bin/cinder-csi-plugin
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        - --cloud-config=$(CLOUD_CONFIG)
        - --cluster=$(CLUSTER_NAME)
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix://csi/csi.sock
        - name: CLOUD_CONFIG
          value: /etc/config/cloud-config
        - name: CLUSTER_NAME
          value: kubernetes
        image: ${CONTAINER_INFRA_PREFIX:-docker.io/k8scloudprovider/}cinder-csi-plugin:${CINDER_CSI_PLUGIN_TAG}
        imagePullPolicy: IfNotPresent
        name: cinder-csi-plugin
        resources:
          requests:
            cpu: 20m
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /etc/config
          name: secret-cinderplugin
          readOnly: true
        - mountPath: /etc/kubernetes/ca-bundle.crt
          name: cacert
          readOnly: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccount: csi-cinder-controller-sa
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - emptyDir: null
        name: socket-dir
      - name: secret-cinderplugin
        secret:
          secretName: cinder-csi-cloud-config
      - hostPath:
          path: /etc/kubernetes/ca-bundle.crt
          type: File
        name: cacert
